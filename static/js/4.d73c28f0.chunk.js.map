{"version":3,"sources":["Libs/http.js","components/Banner/index.jsx","components/Banner/Banner.module.scss","components/ViewDate/index.jsx","components/FriendPreview/index.jsx","components/FriendPreview/FriendPreview.module.scss","components/MessagePreview/index.jsx","components/MessagePreview/MessagePreview.module.scss","components/Post/Post.module.scss","pages/Home/Home.module.scss","components/Post/index.jsx","pages/Home/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPost","data","method","headers","body","JSON","stringify","httpDelete","Banner","color","text","style","backgroundColor","className","styles","banner","module","exports","ViewDate","props","date","Date","formatDistance","addSuffix","locale","it","FriendPreview","name","photo","friend","src","alt","MessagePreview","sender","message","Post","author","useState","changeBanner","setChangeBanner","post","onClick","event","preventDefault","id","setTimeout","window","location","href","deleteBtn","friends","messages","Posts","Home","friendsPreview","setFriendsPreview","allPosts","setAllPosts","messagesPreview","setMessagesPreview","useEffect","reverse","home","grid","map","index","to","createPostBtn"],"mappings":"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","file":"static/js/4.d73c28f0.chunk.js","sourcesContent":["\nconst BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) => fetch(BASE_URL + resource)\n  .then((response) => response.json());\n\nconst httpPost = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: 'POST',\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDelete = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: 'DELETE',\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPost(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => { }, 100);\n  }\n};\n\nexport { http, httpPost, httpDelete, fillFriendsList };","import styles from \"./Banner.module.scss\"\n\nconst Banner = ({color, text}) => {\n\n    return (\n        <div style={{backgroundColor: color}} className={styles.banner}>\n            <h3>{text}</h3>\n        </div>\n    )\n}\n\nexport default Banner;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"banner\":\"Banner_banner__Lcs5E\"};","import { formatDistance } from 'date-fns';\nimport { it } from 'date-fns/locale';\n\nconst ViewDate = (props) => {\n\n    const date = props.date || { date: new Date() };\n\n    return (\n        <small>\n            {formatDistance(new Date(date), new Date(), {\n                addSuffix: true,\n                locale: it\n            })}\n        </small>\n    )\n}\n\nexport { ViewDate };","import styles from './FriendPreview.module.scss'\n\nconst FriendPreview = (props) => {\n\n    const data = props.data || {\n        name: 'Friend',\n        photo: 'https://randomuser.me/api/portraits/lego/8.jpg'\n    };\n\n    return (\n        <div className={styles.friend}>\n            <img src={data.photo} alt={data.name}></img>\n            {data.photo ? <p>{data.name}</p> : <></>}\n        </div>\n    )\n};\n\nexport default FriendPreview;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friend\":\"FriendPreview_friend__3Gjby\"};","import styles from './MessagePreview.module.scss';\nimport { ViewDate } from \"../ViewDate\";\n\nconst MessagePreview = (props) => {\n\n    const data = props.data || {\n        text: 'Lorem ipsum',\n        date: new Date(),\n        sender: 'User'\n    };\n\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n                <ViewDate date={data.date} />\n            </p>\n            <p>{data.text}</p>\n        </div>\n    )\n}\n\nexport default MessagePreview;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3hqZB\",\"deleteBtn\":\"Post_deleteBtn__1bIB2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__1JXvv\",\"grid\":\"Home_grid__sUtIT\",\"createPostBtn\":\"Home_createPostBtn__1BGTQ\",\"friend\":\"Home_friend__eOEhP\"};","\nimport styles from './Post.module.scss';\nimport { ViewDate } from \"../ViewDate\";\nimport { httpDelete } from '../../Libs/http';\nimport Banner from '../Banner';\nimport { useState } from 'react/cjs/react.development';\n\nconst Post = (props) => {\n\n    const data = props.data || {\n        author: 'user',\n        text: 'Text',\n        date: new Date(),\n        photo: 'https://images.unsplash.com/photo-1639519615117-828e9f0fb093?ixlib=rb-1.2.1&ixid=MnwxMjA3fDB8MHxwaG90by1wYWdlfHx8fGVufDB8fHx8&auto=format&fit=crop&w=870&q=80'\n    };\n\n    const [changeBanner, setChangeBanner] = useState(false);\n\n    const handleDeletePost = (event) => {\n        event.preventDefault();\n        httpDelete(`/posts/${props.data.id}`).then(() => { });\n        setChangeBanner(true);\n        setTimeout(() => {\n            setChangeBanner(false);\n            window.location.href = \"/\";\n        }, 3000);\n\n\n    };\n\n    return (\n        <article className={styles.post}>\n            {changeBanner && <Banner color=\"red\" text=\"Post eliminato\" />}\n            <button onClick={handleDeletePost} className={styles.deleteBtn}>X</button>\n\n            <h3>{data.author}</h3>\n            <p>\n                <ViewDate date={data.date} />\n            </p>\n            <p>{data.text}</p>\n\n            {data.photo ? <img src={data.photo} alt={data.author} /> : <></>}\n\n        </article>\n    );\n};\n\nexport { Post };\n\n","import { useState, useEffect } from \"react\";\nimport FriendPreview from \"../../components/FriendPreview\";\nimport MessagePreview from \"../../components/MessagePreview\";\nimport { Post } from \"../../components/Post\";\nimport { http } from \"../../Libs/http\";\nimport { Link } from \"react-router-dom\"\nimport styles from \"./Home.module.scss\";\n\nconst friends = []\n\nconst messages = []\n\nconst Posts = []\n\n\nconst Home = () => {\n\n    const [friendsPreview, setFriendsPreview] = useState(friends);\n    const [allPosts, setAllPosts] = useState(Posts);\n    const [messagesPreview, setMessagesPreview] = useState(messages);\n\n    useEffect(() => {\n        http('/friends?_limit=4').then((data) => setFriendsPreview(data));\n\n        http('/messages?_limit=4').then((data) => setMessagesPreview(data));\n\n        http('/posts').then((data) => setAllPosts(data.reverse()));\n    }, []);\n\n\n\n    return (\n        <section className={styles.home}>\n            <h3>Benvenuto utente</h3>\n            <div className={styles.grid}>\n                <aside>\n                    {friendsPreview.map((friend, index) => (\n                        <FriendPreview key={index} data={friend} />\n                    ))}\n                </aside>\n                <main>\n                    <Link to=\"/new-post\">\n                        <button className={styles.createPostBtn}>Create new post</button></Link>\n                    {allPosts.map((post, index) => (\n                        <Post key={index} data={post} />\n                    ))}\n                </main>\n                <aside>\n                    {messagesPreview.map((message, index) => (\n                        <MessagePreview key={index} data={message} />\n                    ))}\n                </aside>\n            </div>\n        </section>\n    )\n};\n\nexport default Home;"],"sourceRoot":""}