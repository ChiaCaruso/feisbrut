{"version":3,"sources":["Libs/http.js","components/ViewDate/index.jsx","components/MessagePreview/index.jsx","components/MessagePreview/MessagePreview.module.scss","pages/Messages/Messages.module.scss","pages/Messages/index.jsx"],"names":["BASE_URL","http","resource","fetch","then","response","json","httpPost","data","method","headers","body","JSON","stringify","httpDelete","ViewDate","props","date","Date","formatDistance","addSuffix","locale","it","MessagePreview","text","sender","className","styles","message","module","exports","Messages","useState","messagesList","setMessagesList","useEffect","map","id"],"mappings":"mNACMA,EAAW,yCAEXC,EAAO,SAACC,GAAD,OAAcC,MAAMH,EAAWE,GACzCE,MAAK,SAACC,GAAD,OAAcA,EAASC,WAEzBC,EAAW,SAACL,EAAUM,GAAX,OACfL,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,OACRC,QAAS,CACP,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUL,KACpBJ,MAAK,SAACC,GAAD,OAAcA,EAASC,WAE3BQ,EAAa,SAACZ,GAAD,OACjBC,MAAMH,EAAWE,EAAU,CACzBO,OAAQ,SACRC,QAAS,CACP,eAAgB,sBAEjBN,MAAK,SAACC,GAAD,OAAcA,EAASC,Y,gCCrBjC,6DAGMS,EAAW,SAACC,GAEd,IAAMC,EAAOD,EAAMC,MAAQ,CAAEA,KAAM,IAAIC,MAEvC,OACI,gCACKC,YAAe,IAAID,KAAKD,GAAO,IAAIC,KAAQ,CACxCE,WAAW,EACXC,OAAQC,U,gCCXxB,oCAuBeC,IApBQ,SAACP,GAEpB,IAAMR,EAAOQ,EAAMR,MAAQ,CACvBgB,KAAM,cACNP,KAAM,IAAIC,KACVO,OAAQ,QAIZ,OACI,sBAAKC,UAAWC,IAAOC,QAAvB,UACI,6BAAKpB,EAAKiB,SACV,4BACI,cAAC,IAAD,CAAUR,KAAMT,EAAKS,SAEzB,4BAAIT,EAAKgB,Y,mBCjBrBK,EAAOC,QAAU,CAAC,QAAU,kC,mBCA5BD,EAAOC,QAAU,CAAC,SAAW,6B,iGCqBdC,UAhBE,WACb,MAA0CC,mBAAS,IAAnD,mBAAQC,EAAR,KAAsBC,EAAtB,KAMA,OAJAC,qBAAU,WACNlC,YAAK,aAAaG,MAAK,SAAC6B,GAAD,OAAkBC,EAAgBD,QAC1D,IAGC,qBAAKP,UAAWC,IAAOI,SAAvB,SACKE,EAAaG,KAAI,SAACR,GAAD,OACd,cAAC,IAAD,CAAgBpB,KAAMoB,GAAcA,EAAQS","file":"static/js/7.e2e096da.chunk.js","sourcesContent":["\nconst BASE_URL = \"https://edgemony-backend.herokuapp.com\";\n\nconst http = (resource) => fetch(BASE_URL + resource)\n  .then((response) => response.json());\n\nconst httpPost = (resource, data) =>\n  fetch(BASE_URL + resource, {\n    method: 'POST',\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n    body: JSON.stringify(data),\n  }).then((response) => response.json());\n\nconst httpDelete = (resource) =>\n  fetch(BASE_URL + resource, {\n    method: 'DELETE',\n    headers: {\n      \"content-type\": \"application/json\",\n    },\n  }).then((response) => response.json());\n\nconst fillFriendsList = (friendsNames) => {\n  let value = 0;\n  for (value in [...Array(friendsNames.length).keys()]) {\n    httpPost(\"/friends\", {\n      name: friendsNames[value],\n      photo: `https://randomuser.me/api/portraits/men/${value}.jpg`,\n    });\n\n    setTimeout(() => { }, 100);\n  }\n};\n\nexport { http, httpPost, httpDelete, fillFriendsList };","import { formatDistance } from 'date-fns';\nimport { it } from 'date-fns/locale';\n\nconst ViewDate = (props) => {\n\n    const date = props.date || { date: new Date() };\n\n    return (\n        <small>\n            {formatDistance(new Date(date), new Date(), {\n                addSuffix: true,\n                locale: it\n            })}\n        </small>\n    )\n}\n\nexport { ViewDate };","import styles from './MessagePreview.module.scss';\nimport { ViewDate } from \"../ViewDate\";\n\nconst MessagePreview = (props) => {\n\n    const data = props.data || {\n        text: 'Lorem ipsum',\n        date: new Date(),\n        sender: 'User'\n    };\n\n\n    return (\n        <div className={styles.message}>\n            <h5>{data.sender}</h5>\n            <p>\n                <ViewDate date={data.date} />\n            </p>\n            <p>{data.text}</p>\n        </div>\n    )\n}\n\nexport default MessagePreview;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"MessagePreview_message__3j9dl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Messages\":\"Messages_Messages__3lm0z\"};","import { useState, useEffect } from \"react\";\nimport { http } from \"../../Libs/http\";\nimport MessagePreview from \"../../components/MessagePreview\";\n\nimport styles from \"./Messages.module.scss\"\n\nconst Messages = () => {\n    const [ messagesList, setMessagesList ] = useState([]);\n\n    useEffect(() => {\n        http(\"/messages\").then((messagesList) => setMessagesList(messagesList));\n    }, []);\n\n    return (\n        <div className={styles.Messages}>\n            {messagesList.map((message) => (\n                <MessagePreview data={message} key={message.id}/>\n            ))}\n        </div>\n    );\n}\n\nexport default Messages;\n"],"sourceRoot":""}